#27=
#7=1
#1=7
o1<-2
o2<-op2+1
o3<-26*o2-26+1
acp[o3]<-TRUE
}
for(k in 1:25){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
#o1<-2
o2<-op2+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
}
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-2
o2<-op2+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-3
o2<-op2+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-4
o2<-op2+1
o3<-26*o2-26+1
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-4
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-5
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-5
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-1
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-2
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-3
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#now as function for each option
#a_options<-c(1:7)
#a_questions<-c(1:26)
#a_ainq<-c(c(a_questions(c(a_options)))
#acp<-CrossTable(a_questions,1:7)
#acp<-matrix(a_questions,nrow = 7)
###
#rbind(1:4,c=2,d=3)
#acp<-rbind(1:26,A1=1,A2=2,A3=3,A4=4,A5=5,A6=6,A7=7,deparse.level = 1)
#create empty array per participant
acp<-cbind(1:26,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-4
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-5
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-6
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
o1<-7
o2<-o1+1
o3<-26*o2-26+1
acp[o3]<-TRUE
o3<-0
o2<-0
#now as function for each option
#a_options<-c(1:7)
#a_questions<-c(1:26)
#a_ainq<-c(c(a_questions(c(a_options)))
#acp<-CrossTable(a_questions,1:7)
#acp<-matrix(a_questions,nrow = 7)
###
#rbind(1:4,c=2,d=3)
#acp<-rbind(1:26,A1=1,A2=2,A3=3,A4=4,A5=5,A6=6,A7=7,deparse.level = 1)
#create empty array per participant
acp<-cbind(1:26,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE)
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-24
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-26+1+k
acp[o3]<-TRUE
o3<-0
o2<-0
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-24
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-26+1+k
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-1
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-26+1+k
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-1
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-k+1+26
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-1
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-k+26
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
k<-2
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-k*o2-k+26
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-2
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-f*o2-f+26
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-2
k1<-k+26
#k2<-
o1<-2
o2<-o1+1
o3<-f*o2+f*26
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-2
k1<-k+26
#k2<-
o1<-2
o2<-o1
o3<-f*o2+f*26
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-2
k1<-k+26
#k2<-
o1<-2
o2<-o1
o3<-f*o2+f*26-f
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-3
k1<-k+26
#k2<-
o1<-3
o2<-o1
o3<-f*o2+f*26-f
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-3
k1<-k+26
#k2<-
o1<-3
o2<-o1
o3<-o1*26+f+26
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-4
k1<-k+26
#k2<-
o1<-4
o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
for(k in 1:26){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
o3<-0
o2<-0
}
for(k in 1:25){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
o3<-0
o2<-0
}
for(k in 1:25){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
for(k in item_names){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
for(k in length(item_names)){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
for(k in 1:length(item_names)){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
for(k in 1:length(item_names)-1){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
for(k in 1:(length(item_names)-1){
for(k in 1:25){
print(op<-  as.integer(ds[[item_names[k]]]))
#   ifelse(op[1]==1,ct1<-ct1+1,ifelse(op[2]==1,ct1<-ct1+1,"no"))
# opv<-tabulate(as.integer(ds[[item_names[k]]]),6)
op2<-as.integer(ds[[item_names[1][1]]][2])
#   ifelse(op2)
#acp[op2,k+26]<-TRUE
#27=
#7=1
#1=7
f<-k
#    k1<-k+26
#k2<-
o1<-op2
#    o2<-o1
o3<-o1*26+f
# o3<-f*o2+f*26-f
acp[o3]<-TRUE
#  o3<-0
# o2<-0
}
