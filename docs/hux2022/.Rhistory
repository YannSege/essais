replace_content(items,scheme,k1,1:6,k2)
}
}
}
##########################################################
#4. init variables
init<- function(set,opt,base_xml){
items<-refresh_data(datenset)
ifelse(set=="new",return(read_xml(base_xml)),ifelse(set=="mod",return(scheme<-read_xml(xmlmod)),ifelse(set=="old",return(scheme<-read_xml(xmlorigin)),return(items))))
#seta<-refresh_base_a(base_xml)
#setq<-refresh_base_q(base_xml)
#ifelse(set=="items",return(items))
#ifelse(opt=="a",return(seta),ifelse(opt=="q",return(setq),return(items)))
}
#################################################################
# proof:
###########################################################
#5.proof substitution
proof<-function(item,ax,qx){
print("in dataset")
print(get_question(items,item,qx))
print(get_item(items,item,ax))
print("#############################################")
print("in scheme")
print(adress_question(refresh_base_q(scheme),item,qx))
print(adress_answer(refresh_base_a(scheme),item,ax))
}
#proof(8,1,3)
#get_item(items,64,1)
#get_question(items,64,1)
#proof(28,1:6,1:3)
###############################################################
####################################################
### in this section the variables have to be adapted
# declare scheme & dataset
xmlorigin<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/package_hux2022_fragen_templateB_mod_12061.2022-02-04.xml")
#xmlmod<-("qscheme_output.xml")
#to retrieve modified xml-scheme for integrating in soscisurvey.de set next 2 lines
xmlmod_git<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/qscheme_output.xml")
xmlmod<-xmlmod_git
xmltop_scheme<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/qscheme_surveylayout_top.xml")
datenset<-("https://github.com/esteeschwarz/12431_hux2021-appendix/raw/12057_VS/hux2022/proverbs/context2022_items_GR01_GR04_mod_cpt.csv")
#datenset<-("https://github.com/esteeschwarz/12431_hux2021-appendix/raw/12057_VS/hux2022/proverbs/context2022_items_GR04.csv")
#set dataset version
setversion<-5
#schemeset<-xmlorigin
schemeset<-xmlmod
base_xml<-xmlmod_git
#seta<-refresh_base_a(schemeset)
#setq<-refresh_base_q(schemeset)
######## run routine: ##############################
#1
items<-init("items",x,x)
#2
scheme<-init("old",x,base_xml) #values: old=original scheme, mod=modified scheme
scheme_top<-init("new",x,xmltop_scheme) #values: old=original scheme, mod=modified scheme
txt<-    stri_sub((xml_attr(pos,"id")),2,2)
txt<-    stri_sub((xml_attr(pos,"id")),2,2)
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
txt2<-
(xml_attr(pos,"id")<-txt)
print(xml_children(pos))
print(pos)
source("~/boxHKW/21S/essais/gith/12057/essais/docs/hux2022/12057.qscheme_essai_clean.R", echo=TRUE)
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[7]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
replace_top_id_q(scheme_top,5)
}
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[7]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[7]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
refresh_top(xmltop_scheme,5)
print(xml_children(xml_children(scheme_top[7])))
print(xml_children(xml_children(scheme_top)))
refresh_top(xmltop_scheme[length(xmltop_scheme)],5)
print(xml_children(xml_children(scheme_top)))
refresh_top(xmltop_scheme[1:length(xmltop_scheme)],5)
print(xml_children(xml_children(scheme_top)))
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[1:length(xmltop_scheme)]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
refresh_top(xmltop_scheme,setversion)
print(xml_children(xml_children(scheme_top)))
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[1:length(xmltop_scheme_2)]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
refresh_top(xmltop_scheme,setversion)
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[1:length(xmlscheme_top_2)]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
refresh_top(xmltop_scheme,setversion)
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
# tag<-"question"
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
# (stri_sub(xml_attr(scheme_top_2[7]),"id"),1,1)<-version)
#  (stri_sub(string,2,2)<-version)
#print(set_old)
#set new value
# id_top<-"F"%s+%4
#print(xml_attr(scheme_top[tx],"id"))
#   nr3<-as.character(nr2)
#nr4<-"item"%s+%nr3 #need to integrate library(stringi)
#(xml_attr(scheme_top[tx],"id"))
#replace_top_id_q<- function(id_top,version){
pos<-scheme_top_2[1:length(scheme_top_2)]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=5)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
#xml_replace(pos,"quest",txt)
# }
#print(pos)
#xml_attr(xml_children(xml_children(scheme_top_2)),"id")
#  id_top<-refresh_top(layout_top,7,"A")
# print(stri_sub(id_top,2,2))
#replace_top_id_q(scheme_top,5)
}
refresh_top(xmltop_scheme,setversion)
print(xml_children(xml_children(scheme_top)))
#################
#6.2 replacement in top scheme
refresh_top <- function(scheme,version) {
scheme_top_2<-(xml_children(xml_children(scheme_top)))
tst1<-xml_attr(xml_children(xml_children(scheme_top_2)),"id")
pos<-scheme_top_2[1:length(scheme_top_2)]
txt<-    stri_sub_replace((xml_attr(pos,"id")),2,2,replacement=version)
ifelse(stri_sub((xml_attr(pos,"id")),2,2)=="F",flag<-1,flag<-0)
(xml_attr(pos,"id")<-txt)
}
####
refresh_top(xmltop_scheme,6)
source("~/boxHKW/21S/essais/gith/12057/essais/docs/hux2022/12057.qscheme_essai_clean.R", echo=TRUE)
print(xml_children(scheme_top)
}
####
#refresh_top(xmltop_scheme,6)
#print(xml_children(xml_children(scheme_top)))
####works for row replacement
#replace_top_id_q
########################################
#3.2 looping replacement over number of items, questions, answers
replace_loop <- function(){
la<-length(items$item)
for (k1 in 1:la){
for (k2 in 1:3){
replace_content(items,scheme,k1,1:6,k2)
}
}
}
##########################################################
#4. init variables
init<- function(set,opt,base_xml){
items<-refresh_data(datenset)
ifelse(set=="new",return(read_xml(base_xml)),ifelse(set=="mod",return(scheme<-read_xml(xmlmod)),ifelse(set=="old",return(scheme<-read_xml(xmlorigin)),return(items))))
#seta<-refresh_base_a(base_xml)
#setq<-refresh_base_q(base_xml)
#ifelse(set=="items",return(items))
#ifelse(opt=="a",return(seta),ifelse(opt=="q",return(setq),return(items)))
}
#################################################################
# proof:
###########################################################
#5.proof substitution
proof<-function(item,ax,qx){
print("in dataset")
print(get_question(items,item,qx))
print(get_item(items,item,ax))
print("#############################################")
print("in scheme")
print(adress_question(refresh_base_q(scheme),item,qx))
print(adress_answer(refresh_base_a(scheme),item,ax))
}
#proof(8,1,3)
#get_item(items,64,1)
#get_question(items,64,1)
#proof(28,1:6,1:3)
###############################################################
####################################################
### in this section the variables have to be adapted
# declare scheme & dataset
xmlorigin<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/package_hux2022_fragen_templateB_mod_12061.2022-02-04.xml")
#xmlmod<-("qscheme_output.xml")
#to retrieve modified xml-scheme for integrating in soscisurvey.de set next 2 lines
xmlmod_git<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/qscheme_output.xml")
xmlmod<-xmlmod_git
xmltop_scheme<-("https://github.com/esteeschwarz/essais/raw/main/docs/hux2022/qscheme_surveylayout_top.xml")
datenset<-("https://github.com/esteeschwarz/12431_hux2021-appendix/raw/12057_VS/hux2022/proverbs/context2022_items_GR01_GR04_mod_cpt.csv")
#datenset<-("https://github.com/esteeschwarz/12431_hux2021-appendix/raw/12057_VS/hux2022/proverbs/context2022_items_GR04.csv")
#set dataset version
setversion<-5
#schemeset<-xmlorigin
schemeset<-xmlmod
base_xml<-xmlmod_git
#seta<-refresh_base_a(schemeset)
#setq<-refresh_base_q(schemeset)
######## run routine: ##############################
#1
items<-init("items",x,x)
#2
scheme<-init("old",x,base_xml) #values: old=original scheme, mod=modified scheme
scheme_top<-init("new",x,xmltop_scheme) #values: old=original scheme, mod=modified scheme
print(xml_children(scheme_top)
print(xml_children(scheme_top))
print(xml_children(scheme_top))
xml_add_sibling(xml_children(scheme_top),tag,after)
tag<-"question"
xml_add_sibling(xml_children(scheme_top),tag,after)
xml_add_sibling(xml_children(scheme_top),tag,.after)
xml_add_sibling(xml_children(scheme_top),tag,where=after)
xml_add_sibling(xml_children(scheme_top),tag,where="after")
print(xml_children(scheme_top))
####
refresh_top(xmltop_scheme)
scheme_top<-init("new",x,xmltop_scheme) #values: old=original scheme, mod=modified scheme
print(xml_children(scheme_top))
scheme_l<-print(xml_children(xml_children(scheme_top)))
xml_add_sibling(scheme_l,tag)
xml_add_sibling(xml_children(xml_children(scheme_top,tag)))
xml_add_sibling(xml_children(xml_children(scheme_top),tag))
xml_add_sibling(xml_children(xml_children(scheme_top)),tag)
print(xml_children(xml_children(scheme_top)))
xml_add_sibling(xml_children(xml_children(scheme_top)),tag,.where="after")
print(xml_children(xml_children(scheme_top)))
xml_add_child(xml_children(xml_children(scheme_top)),tag,.where="after")
print(xml_children(xml_children(scheme_top)))
xml_add_parent(xml_children(xml_children(scheme_top)),tag,.where="after")
print(xml_children(xml_children(scheme_top)))
xml_add_parent(xml_children(xml_children(scheme_top))[120],tag)
print(xml_children(xml_children(scheme_top)))
xml_add_sibling(xml_children(xml_children(scheme_top))[120],tag)
print(xml_children(xml_children(scheme_top)))
scheme_top<-init("new",x,xmltop_scheme) #values: old=original scheme, mod=modified scheme
print(xml_children(xml_children(scheme_top)))
xml_add_sibling(xml_children(xml_children(scheme_top))[5],tag)
print(xml_children(xml_children(scheme_top)))
value="TEST"
xml_add_sibling(xml_children(xml_children(scheme_top))[5],tag,value)
print(xml_children(xml_children(scheme_top)))
(xml_attr(xml_children(xml_children(scheme_top))[5])<-"NEUE")
xml_attrs(xml_children(xml_children(scheme_top))[5])
print(xml_children(xml_children(scheme_top)))
xml_attrs(xml_children(xml_children(scheme_top))[6])
(xml_attrs(xml_children(xml_children(scheme_top))[6])<-"nocheintest")
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-"nocheintest")
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-value)
values="TEST"
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-values)
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-value=values)
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-value="ttt")
(xml_attrs(xml_children(xml_children(scheme_top))[[6]])<-"rrr")
(xml_attr(xml_children(xml_children(scheme_top))[[6]])<-"rrr")
(xml_attr(xml_children(xml_children(scheme_top))[[6]]))
(xml_attr(xml_children(xml_children(scheme_top))[[6]]),"character")
xml_attr(xml_children(xml_children(scheme_top))[[6]]),character)
xml_attr(xml_children(xml_children(scheme_top)[[6]]),character)
xml_attr(xml_children(xml_children(scheme_top)[[6]]),"character")
(xml_attr(xml_children(xml_children(scheme_top)[[6]]),"character")<-"TST")
xml_attr(xml_children(xml_children(scheme_top)[[6]]),"character")
xml_set_attr(xml_children(xml_children(scheme_top)[[6]]),"character","NEUER")
print(xml_children(xml_children(scheme_top)))
xml_set_attr(xml_children(xml_children(scheme_top)[[5]]),"id","NEUER")
print(xml_children(xml_children(scheme_top)))
xml_set_attr(xml_children(xml_children(scheme_top)[[4]]),"id","NEUER")
print(xml_children(xml_children(scheme_top)))
tag<-"testtag"
values="TEST"
xml_add_sibling(xml_children(xml_children(scheme_top))[5],tag,value)
print(xml_children(xml_children(scheme_top)))
eval(parse("https://www.soscisurvey.de/hux2022/index.php?act=KxK3D5mcthtf8Tar05pR4SiU&vQuality&useSettings&rScript", encoding="UTF-8"))
View(ds)
pre<-eval(parse("https://www.soscisurvey.de/hux2022/?act=qM85F9YYrhjRhLB3gvub2AyF&rScript"))
View(ds)
View(as.data.frame.avector)
View(`[.avector`)
View(as.data.frame.avector)
tst<-as.data.frame(ds)
tst<-attr(ds$MT02_01)
tst<-attr(ds$MT02_01[1])
tst<-attr(ds$MT02_01,TRUE)
View(tst)
View(tst)
tst<-attr(ds$MT02_01,*,TRUE)
tst<-attr(ds$MT02_01,"*",TRUE)
tst<-attr(ds$FR01,"*",TRUE)
pre<-eval(parse("https://www.soscisurvey.de/hux2022/?act=qM85F9YYrhjRhLB3gvub2AyF&rScript"))
View(ds)
#Daten:
srvr<-"https://www.soscisurvey.de/hux2022/?act=4eqU86Oc62EfGZm7PbHOjcmL&rScript"
srvd<-"https://www.soscisurvey.de/hux2022/?act=4eqU86Oc62EfGZm7PbHOjcmL"
eval(parse(srvr, encoding="UTF-8"))
tst<-read.csv(srvd)
View(tst)
tst<-read.csv(srvd,skip=1)
library(readr)
rdata_hux2022_2022_02_11_08_58 <- read_table2("~/Downloads/rdata_hux2022_2022-02-11_08-58.csv")
View(rdata_hux2022_2022_02_11_08_58)
tst<-read.csv(srvd,skip=1,sep=" ")
tst<-read.csv(srvd,sep=" ")
ds_file = file.choose()
#ds_file = file.choose()
# setwd("./")
ds_file = srvd
View(rdata_hux2022_2022_02_11_08_58)
srvd<-"https://www.soscisurvey.de/hux2022/?act=4eqU86Oc62EfGZm7PbHOjcmL"
#ds_file = file.choose()
# setwd("./")
ds_file = srvd
#ds_file = file.choose()
# setwd("./")
ds_file = srvd
View(tst)
View(rdata_hux2022_2022_02_11_08_58)
srvx<-"https://www.soscisurvey.de/hux2022/?act=sVUxIeqRpUFiqDjwfQn9WE0J"
#ds_file = file.choose()
# setwd("./")
ds_file = srvx
read.table(srvx)
srvd2<-"https://www.soscisurvey.de/hux2022/?act=4eqU86Oc62EfGZm7PbHOjcmL"
tst<-read.csv(srvd2,sep=" ")
tst<-read.csv(srvd2,sep=" ",skip=1)
View(tst)
read.table(srvx,header="TRUE")
library(readxl)
data_hux2022_2022_02_11_10_02 <- read_excel(srvx)
download.file(srvx,"hux2022.xlsx")
setwd("~/boxHKW/21S/essais/gith/12057/essais/docs/hux2022")
download.file(srvx,"hux2022.xlsx")
srvwd<-"hux2022x.xlsx"
srvwd<-"hux2022x.xlsx"
download.file(srvx,srvwd)
srvdta<-read_excel(srvwd)
tst<-read.csv(srvdta,sep=" ",skip=1)
download.file(srvx,"hux2022b.xlsx")
srvdta<-read_csv("hux2022b.xlsx")
tst<-read.csv(srvdta,sep=" ",skip=1)
tst<-read.csv(srvdta,sep=" ",skip=1)
tst<-read_csv(srvdta,sep=" ",skip=1)
tst<-read_csv(srvdta,skip=1)
srvwd<-"hux2022b.xlsx"
tst<-read_csv(srvwd,skip=1)
tst<-read_csv(srvwd,sep=" "skip=1)
tst<-read_csv(srvwd,sep=" ",skip=1)
download.file(srvx,"hux2022b.csv")
library(readr)
hux2022b <- read_table2("hux2022b.csv", skip = 1)
View(hux2022b)
View(hux2022b)
library(readr)
hux2022b <- read_table2("hux2022b.csv")
View(hux2022b)
library(readr)
hux2022x <- read_table2(srvx)
View(hux2022x)
srvx<-"https://www.soscisurvey.de/hux2022/?act=XFHFbeVybOP6o72MZIy0lUlR"
hux2022x <- read_table2(srvx)
View(hux2022x)
hux2022x$`"TIME_SUM"`
hux2022x$`"F401"`
